version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: resume-matcher-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: resume-matcher-api
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DEBUG=true
      - ENVIRONMENT=development
      - USE_MOCK_JOBS=true
      - LOG_LEVEL=DEBUG
      - PYTHONUNBUFFERED=1
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: sh -c "sleep 5 && python main.py"

  worker:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: resume-matcher-worker
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DEBUG=true
      - ENVIRONMENT=development
      - USE_MOCK_JOBS=true
      - LOG_LEVEL=DEBUG
      - PYTHONUNBUFFERED=1
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    depends_on:
      - redis
      - api
    command: sh -c "sleep 10 && celery -A app.core.celery_app.celery_app worker --loglevel=debug --concurrency=1"

volumes:
  redis_data:
  app_data:
  app_logs: